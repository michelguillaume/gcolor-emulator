name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]

    container:
      image: guillaumemichel1026/gcolor-emulator:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v4

    # Debug: Verify the environment variables
    - name: Print environment variables
      run: printenv

    # Debug: Show the current working directory and list files
    - name: Verify initial working directory
      run: |
        echo "Current working directory:"
        pwd
        echo "Listing files:"
        ls -alh

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.29'

    # Debug: Ensure the build directory is created
    - name: Create build directory and verify it
      run: |
        mkdir -p ${{github.workspace}}/build
        echo "Created build directory:"
        ls -alh ${{github.workspace}}/build

    # Debug: Run cmake configuration and verify the result
    - name: Configure CMake
      run: |
        echo "Running CMake configuration..."
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} || exit 1
        echo "CMake configuration complete. Verifying build directory contents:"
        ls -alh ${{github.workspace}}/build

    # Debug: Build the project and check for issues
    - name: Build
      run: |
        echo "Building project with configuration: ${{env.BUILD_TYPE}}"
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} || exit 1
        echo "Build completed. Verifying build artifacts:"
        ls -alh ${{github.workspace}}/build

    # Debug: Check if test executable exists before running tests
    - name: Verify test executables
      run: |
        echo "Checking if test executables are present in build directory:"
        ls -alh ${{github.workspace}}/build
        ls -alh ${{github.workspace}}/build/bin || echo "No bin directory found."

    # Run tests and output failure details if any
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: |
        echo "Running CTest with configuration: ${{env.BUILD_TYPE}}"
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure || exit 1
